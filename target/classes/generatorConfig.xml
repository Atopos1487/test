<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- 配置生成器:所有标有序号的内容都需要修改为自己的内容或者路径 -->
<generatorConfiguration>
    <!--1、数据库驱动jar:添加自己的jar路径 -->
    <classPathEntry
            location="E:\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar" />

    <context id="MyBatis" targetRuntime="MyBatis3">

        <!--去除注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!--2、数据库连接 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://rm-j6cgp72p2s3s0531d0o.mysql.rds.aliyuncs.com:3306/hospital?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT"
                        userId="lyl"
                        password="77276lyL">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer;
        为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--3、生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建
        使用Maven生成在target目录下，会自动创建） -->
        <javaModelGenerator targetPackage="com.kkb.pojo"
                            targetProject="src\main\java">
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--4、生成SQLmapper.xml文件 -->
        <sqlMapGenerator targetPackage="com.kkb.mapper"
                         targetProject="src\main\resources">
        </sqlMapGenerator>
        <!--5、生成Dao（Mapper）文件,生成接口 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.kkb.mapper"
                             targetProject="src\main\java">
        </javaClientGenerator>
        <!--6、要生成哪些表(更改tableName和domainObjectName就可以) -->
        <!-- tableName:要生成的表名
        enableCountByExample:Count语句中加入where条件查询，默认为true开启
        enableUpdateByExample:Update语句中加入where条件查询，默认为true开启
        enableDeleteByExample:Delete语句中加入where条件查询，默认为true开启
        enableSelectByExample:Select多条语句中加入where条件查询，默认为true开启
        selectByExampleQueryId:Select单个对象语句中加入where条件查询，默认为true开启
        -->
        <table tableName="behospital">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="chargeproject">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="department">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="doctor">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="drug">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="drugpeople">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="hospitaluser">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="hosregister">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="menu">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="patient">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="pricepeople">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="role">
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="rolemenu">
            <property name="useActualColumnNames" value="true"/>
        </table>
    </context>
</generatorConfiguration>